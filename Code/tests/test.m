
% heur_gray = zeros(5, 128, 128);
% heur_vec = zeros(5, 128, 128);
% heur_cos = zeros(5, 128, 128);
% heur_color = zeros(5, 3, 128, 128);

for image_i = 1:1
    
    image = double(imread(strcat('dataset\testset\', num2str(image_i), '.jpg'))) ./ 255;
    
%     [~, colorresults] = ACORGB(image, ...
%         'BaselineHeuristic', ...
%         'AntCreation', ...
%         'RandomAntInitialization', ...
%         'EightNPosSteps', ...
%         6, ...
%         40, ...
%         20, ...
%         1.1, ...
%         0.1, ...
%         0.05, ...
%         0.025);
%     
%     %heur_color(image_i, :, :, :) = squeeze(results(:, 1, :, :));
%     
%     [~, vecresults] = ACOEdgeDetection(image, ...
%         'VectorHeuristic', ...
%         'AntCreation', ...
%         'RandomAntInitialization', ...
%         'EightNPosSteps', ...
%         8, ...
%         40, ...
%         20, ...
%         1.1, ...
%         0.1, ...
%         0.05, ...
%         0.025);
%     
%     %heur_vec(image_i,:,:) = squeeze(results(1,:,:));
% 
    [~,cosresults] = ACOEdgeDetection(image, ...
        'CosineHeuristic', ...
        'AntCreation', ...
        'RandomAntInitialization', ...
        'EightNPosSteps', ...
        4, ...
        40, ...
        15, ...
        1, ...
        0.05, ...
        0.15, ...
        0.025);
%     
%     %heur_cos(image_i,:,:) = squeeze(results(1,:,:));
%     
%     %Turn RGB image into grayscale image
%     gray = rgb2gray(image);
%     gray = gray(:,:,1);
%     
%     [~,grayresults] = ACOEdgeDetection(gray, ...
%         'BaselineHeuristic', ...
%         'AntCreation', ...
%         'RandomAntInitialization', ...
%         'EightNPosSteps', ...
%         8, ...
%         40, ...
%         20, ...
%         1.1, ...
%         0.1, ...
%         0.05, ...
%         0.025);
%      
%     %heur_gray(image_i,:,:) = squeeze(results(1,:,:));
end
